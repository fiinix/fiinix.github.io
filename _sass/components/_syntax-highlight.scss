/*Solarized Light

For use with Jekyll and Pygments

http://ethanschoonover.com/solarized

SOLARIZED HEX      ROLE
--------- -------- ------------------------------------------
*/

$base01:	#586e75;	/* body text / default code / primary content */
$base1:		#93a1a1;	/* comments / secondary content */
$base3:		#fdf6e3;	/* background */
$orange:	#cb4b16;	/* constants */
$red:		#dc322f;	/* regex, special keywords */
$blue:		#268bd2;	/* reserved keywords */
$cyan:		#2aa198;	/* strings, numbers */
$green:		#859900;	/* operators, other keywords */
$built-in:	#B58900;	/* what is this? */

/* Eclipse */
$code_plain:					black !default;
$code_comments:					#3f5fbf !default;
$code_string:					#2a00ff !default;
$code_keyword:					#7f0055 !default;
$code_preprocessor:				#646464 !default;
$code_variable:					#aa7700 !default;
$code_value:					#009900 !default;
$code_functions:				#ff1493 !default;
$code_constants:				#0066cc !default;
$code_color1:					gray !default;
$code_color2:					#ff1493 !default;
$code_color3:					red !default;

pre,
code {

    font-family: $fixed-family;

}

*:not(.highlight) pre {

    //color: $black;

}

// Prose gets no class by default so this needs to be overridden in _syntax_highlight
//figure { background-color: white;}
//.highlight {
//
//    margin-top: 4.5em;
//    margin-bottom: 4.5em;
//
//    margin-left: 5.5555vw;
//    margin-right: 11.1111vw;
//
//    @include mq($breakpoint-lap) {
//
//        margin-left: 11.1111vw;
//        margin-right: 44.4444vw;
//
//    }
//
//}

/* Scope code to only apply to inline code tags
   ========================================================================== */
p code {

    padding: 0.05em 0.2em;
    border-radius: 0.2em;

    word-break: keep-all;

    -webkit-hyphens: none;
    -moz-hyphens: none;
    hyphens: none;

    background-color: white;
    color: contrast(white);

}

.highlight {

    font-size: 0.89em;

    padding: 3.2em 5.5555vw;

    margin-top: 4.5em;
    margin-bottom: 4.5em;
    margin-left: -5.5555vw;
    margin-right: -11.1111vw;

    //overflow: auto;
    // max-height: ($font-leading / $font-size)*12 +em;

    // background-color: $base3;
    // color: $base01;
    background-color: white;
    color: $black;

    &:before {

        content: " ";
        display: block;
        position: absolute;
        bottom: -1.3888vw;
        left: 5.5555vw;
        width: 11.1111vw;
        height:2.7777vw;
        background-color: luma(70);

        @include mq($breakpoint-lap) {

            left: 11.1111vw;

        }

    }

    @include mq($breakpoint-lap) {

        margin-left: -11.1111vw;
        margin-right: -44.44444vw;

    }
}

.highlight pre {

    margin-left: 0;
    margin-right: 11.1111vw;

    @include mq($breakpoint-lap) {

        margin-left: 5.5555vw;
        margin-right: 44.4444vw;

    }

}

.highlight code {
    overflow: auto;
}

.highlight .language-text {

    overflow: visible;

    // because I want to preserve new lines, spaces and tabs but wrap text
    white-space: pre-wrap;

}


.highlight .c { color: $base1; } /* Comment */
.highlight .err { color: $base01; } /* Error */
.highlight .g { color: $base01; } /* Generic */
.highlight .k { color: $green; } /* Keyword */
.highlight .l { color: $base01; } /* Literal */
.highlight .n { color: $base01; } /* Name */
.highlight .o { color: $green; } /* Operator */
.highlight .x { color: $orange; } /* Other */
.highlight .p { color: $base01; } /* Punctuation */
.highlight .cm { color: $base1; } /* Comment.Multiline */
.highlight .cp { color: $green; } /* Comment.Preproc */
.highlight .c1 { color: $base1; } /* Comment.Single */
.highlight .cs { color: $green; } /* Comment.Special */
.highlight .gd { color: $cyan; } /* Generic.Deleted */
.highlight .ge { color: $base01; font-style: italic; } /* Generic.Emph */
.highlight .gr { color: $red; } /* Generic.Error */
.highlight .gh { color: $orange; } /* Generic.Heading */
.highlight .gi { color: $green; } /* Generic.Inserted */
.highlight .go { color: $base01; } /* Generic.Output */
.highlight .gp { color: $base01; } /* Generic.Prompt */
.highlight .gs { color: $base01; font-weight: bold; } /* Generic.Strong */
.highlight .gu { color: $orange; } /* Generic.Subheading */
.highlight .gt { color: $base01; } /* Generic.Traceback */
.highlight .kc { color: $orange; } /* Keyword.Constant */
.highlight .kd { color: $blue; } /* Keyword.Declaration */
.highlight .kn { color: $green; } /* Keyword.Namespace */
.highlight .kp { color: $green; } /* Keyword.Pseudo */
.highlight .kr { color: $blue; } /* Keyword.Reserved */
.highlight .kt { color: $red; } /* Keyword.Type */
.highlight .ld { color: $base01; } /* Literal.Date */
.highlight .m { color: $cyan; } /* Literal.Number */
.highlight .s { color: $cyan; } /* Literal.String */
.highlight .na { color: $base01; } /* Name.Attribute */
.highlight .nb { color: $built-in; } /* Name.Builtin */
.highlight .nc { color: $blue; } /* Name.Class */
.highlight .no { color: $orange; } /* Name.Constant */
.highlight .nd { color: $blue; } /* Name.Decorator */
.highlight .ni { color: $orange; } /* Name.Entity */
.highlight .ne { color: $orange; } /* Name.Exception */
.highlight .nf { color: $blue; } /* Name.Function */
.highlight .nl { color: $base01; } /* Name.Label */
.highlight .nn { color: $base01; } /* Name.Namespace */
.highlight .nx { color: $base01; } /* Name.Other */
.highlight .py { color: $base01; } /* Name.Property */
.highlight .nt { color: $blue; } /* Name.Tag */
.highlight .nv { color: $blue; } /* Name.Variable */
.highlight .ow { color: $green; } /* Operator.Word */
.highlight .w { color: $base01; } /* Text.Whitespace */
.highlight .mf { color: $cyan; } /* Literal.Number.Float */
.highlight .mh { color: $cyan; } /* Literal.Number.Hex */
.highlight .mi { color: $cyan; } /* Literal.Number.Integer */
.highlight .mo { color: $cyan; } /* Literal.Number.Oct */
.highlight .sb { color: $base1; } /* Literal.String.Backtick */
.highlight .sc { color: $cyan; } /* Literal.String.Char */
.highlight .sd { color: $base01; } /* Literal.String.Doc */
.highlight .s2 { color: $cyan; } /* Literal.String.Double */
.highlight .se { color: $orange; } /* Literal.String.Escape */
.highlight .sh { color: $base01; } /* Literal.String.Heredoc */
.highlight .si { color: $cyan; } /* Literal.String.Interpol */
.highlight .sx { color: $cyan; } /* Literal.String.Other */
.highlight .sr { color: $red; } /* Literal.String.Regex */
.highlight .s1 { color: $cyan; } /* Literal.String.Single */
.highlight .ss { color: $cyan; } /* Literal.String.Symbol */
.highlight .bp { color: $blue; } /* Name.Builtin.Pseudo */
.highlight .vc { color: $blue; } /* Name.Variable.Class */
.highlight .vg { color: $blue; } /* Name.Variable.Global */
.highlight .vi { color: $blue; } /* Name.Variable.Instance */
.highlight .il { color: $cyan; } /* Literal.Number.Integer.Long */
